@using SnQTranslator.AspMvc.Modules.Handler
@using SnQTranslator.AspMvc.Modules.Session
@using SnQTranslator.AspMvc.Models.Modules.Account
@model LogonViewModel

@{
	SessionWrapper sessionWrapper = new SessionWrapper(Context.Session);
}

<environment names="Development">
	<link rel="stylesheet" href="~/css/logon.css" />
</environment>
<environment names="Staging,Production">
	<link rel="stylesheet" href="~/css/logon.min.css" asp-append-version="true" />
</environment>

@{
	string controller = ViewContext.RouteData.Values["controller"].ToString();
	string action = ViewContext.RouteData.Values["action"].ToString();
	string title = action;
	string subTitle = "Please provide your user credentials to proceed:";

	ViewData["Title"] = title;
}

<hr />

<div class="vertical-flex-center">
	<div class="container-fluid">
		<div class="row">
			<div class="col-sm-12 text-center">
				<h2>@title</h2>
				<h4>@subTitle</h4>
			</div>
		</div>
		<div class="row">
			<div class="col-sm-8 offset-2 text-center">
				<div class="account-wall">
					<span class="profile-img text-center">
						<i class="fas fa-user"></i>
					</span>
					@using (Html.BeginForm("Logon", "Account", new { returnUrl = "" }, FormMethod.Post, null, new { @class = "form-signin", role = "form" }))
					{
						@Html.AntiForgeryToken()
						@Html.ValidationSummary(true)

						<input name="@nameof(Model.ReturnUrl)" type="hidden" value="@Model.ReturnUrl" />
						<input name="@nameof(Model.IdentityUrl)" type="hidden" value="@Model.IdentityUrl" />
						<input name="@nameof(Model.Email)" type="text" class="form-control" placeholder="Email" required autofocus />
						<p></p>
						<input name="@nameof(Model.Password)" type="password" class="form-control" placeholder="Password" required />
						<button class="btn btn-lg btn-primary btn-block" type="submit">
							Sign in
						</button>
					}
					@if (string.IsNullOrEmpty(ErrorHandler.LastError) == false)
					{
						<div class="alert alert-danger" role="alert">
							@ErrorHandler.GetLastErrorAndClear()
						</div>
					}
				</div>
			</div>
		</div>
	</div>
</div>
