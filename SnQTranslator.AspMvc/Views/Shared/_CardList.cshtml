@*@CodeCopy*@
@{
    @using SnQTranslator.AspMvc.Models.Modules.Common
    @using SnQTranslator.AspMvc.Models.Modules.View
    @using SnQTranslator.AspMvc.Modules.Session
    @using SnQTranslator.AspMvc.Modules.View
    @model IndexViewModel

    var viewBagInfo = Model?.ViewBagInfo;
    var sessionInfo = new SessionWrapper(Context.Session);

    if (Model != null)
    {
        @foreach (var model in Model.DisplayModels)
        {
            model.ViewBagInfo = viewBagInfo;
            <div class="card" style="margin-bottom: 0.5em;">
                <ul class="list-group list-group-flush">
                    @if (model is IFirstToSecond fTs)
                    {
                        viewBagInfo.IgnoreNames.Add($"{fTs.FirstModel.GetType().Name}Id");
                        @await Html.PartialAsync("_CardGroup", ViewModelCreator.CreateDisplayViewModel(viewBagInfo, fTs.FirstModel))
                        @await Html.PartialAsync("_CardGroup", ViewModelCreator.CreateDisplayViewModel(viewBagInfo, fTs.SecondModel))
                    }
                    else
                    {
                        @await Html.PartialAsync("_CardGroup", ViewModelCreator.CreateDisplayViewModel(viewBagInfo, model))
                    }
                </ul>
@*#if ACCOUNT_ON*@
@{
    @if (sessionInfo.LoginSession != null
    && viewBagInfo.CommandMode != CommandMode.None
    && viewBagInfo.Action.Equals(ActionMode.Delete.ToString()) == false)
    {
        <div class="card-body">
            @await Html.PartialAsync("_CommandControl", model)
        </div>
    }
    else
    {
        @await Html.PartialAsync("_CardBody", model)
    }
}
@*#endif*@

@*#if ACCOUNT_OFF*@@*
    @if (viewBagInfo.CommandMode != CommandMode.None
         && viewBagInfo.Action.Equals(ActionMode.Delete.ToString()) == false)
    {
        <div class="card-body">
            @await Html.PartialAsync("_CommandControl", model)
        </div>
    }
    else
    {
        @await Html.PartialAsync("_CardBody", model)
    }
*@@*#endif*@
            </div>
        }
    }
}
