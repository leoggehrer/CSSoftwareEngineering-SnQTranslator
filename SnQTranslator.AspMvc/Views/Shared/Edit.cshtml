@*@CodeCopy*@
@{
    @using SnQTranslator.AspMvc.Models.Modules.Common
    @using SnQTranslator.AspMvc.Modules.Handler
    @using SnQTranslator.AspMvc.Modules.Language
    @using SnQTranslator.AspMvc.Modules.Session
    @using SnQTranslator.AspMvc.Modules.View
    @using SnQTranslator.AspMvc.Models.Modules.View
    @model EditViewModel

    var viewBagInfo = Model?.ViewBagInfo;
    var sessionInfo = new SessionWrapper(Context.Session);

    if (viewBagInfo == null)
    {
        viewBagInfo = new ViewBagWrapper(ViewBag);
    }
    viewBagInfo.Translate = Translator.TranslateIt;
    viewBagInfo.Controller = ViewContext.RouteData.Values["controller"].ToString();
    viewBagInfo.Action = ViewContext.RouteData.Values["action"].ToString();

    ViewData["Title"] = viewBagInfo.Title;
    <h2>@ViewData["Title"]</h2>
    <div class="d-flex bg-transparent">
        <div class="p-sm-2 mr-auto">
            <h4>@viewBagInfo.TranslateFor(viewBagInfo.Action)</h4>
        </div>
    </div>
    <hr />

    @if (string.IsNullOrEmpty(ErrorHandler.LastViewError) == false)
    {
        <div class="alert alert-danger" role="alert">
            @ErrorHandler.GetLastViewErrorAndClear()
        </div>
    }

    <form id="form" action="" method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        @await Html.PartialAsync("_CreateEdit", Model)
        @await Html.PartialAsync("_SubmitApplyBack", new SubmitApplyBackCmd() 
        {
            SubmitText = viewBagInfo.TranslateFor("Save"),
            SubmitAction = Url.Action(nameof(ActionMode.Update), viewBagInfo.Controller),
            BackText = viewBagInfo.TranslateFor("Back to List"),
            ApplyText = viewBagInfo.TranslateFor("Apply"),
            ApplyAction = Url.Action(nameof(ActionMode.Apply), viewBagInfo.Controller),
        })
    </form>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

