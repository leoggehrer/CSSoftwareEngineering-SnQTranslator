@*@CodeCopy*@
@using CommonBase.Extensions
@using SnQTranslator.AspMvc.Modules.Session
@model IEnumerable<SnQTranslator.AspMvc.Models.IdentityModel>

@{
    ViewData["Title"] = "Index";
    var sessionWrapper = new SessionWrapper(Context.Session);
    var modelSubType = Model.GetType().GetGenericArguments()[0];
    var ignoreProperties = new string[] { "Id", "RowVersion", "ActionError" };
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            @foreach (var headerItem in modelSubType.GetAllInterfacePropertyInfos()
                                                    .Where(p => p.CanRead && ignoreProperties.Any(e => e.Equals(p.Name)) == false))
            {
                <th>
                    @Html.DisplayName(headerItem.Name)
                </th>
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @foreach (var bodyItem in modelSubType.GetAllInterfacePropertyInfos()
                                                      .Where(p => p.CanRead && ignoreProperties.Any(e => e.Equals(p.Name)) == false))
                {
                    var value = bodyItem.GetValue(item);

                    <td>
                        @(value != null ? value.ToString() : string.Empty)
                    </td>
                }
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </tbody>
</table>
