@*@CodeCopy*@
@{
    @using SnQTranslator.AspMvc.Modules.Handler
    @using SnQTranslator.AspMvc.Modules.Language
    @using SnQTranslator.AspMvc.Modules.Session
    @using SnQTranslator.AspMvc.Modules.View
    @model IEnumerable<SnQTranslator.AspMvc.Models.IdentityModel>

    var viewBagWrapper = new ViewBagWrapper(ViewBag);
    var sessionWrapper = new SessionWrapper(Context.Session);
    var controller = ViewContext.RouteData.Values["controller"].ToString();
    var action = ViewContext.RouteData.Values["action"].ToString();
    Func<string, string> translate = Translator.TranslateIt;
    Func<string, string> translateFor = pn => translate($"{controller}.{pn}");
    var title = translateFor(controller);

    ViewData["Title"] = title;

    <h1>@title</h1>

    @if (string.IsNullOrEmpty(ErrorHandler.LastViewError) == false)
    {
        <div class="alert alert-danger" role="alert">
            @ErrorHandler.GetLastViewErrorAndClear()
        </div>
    }
    else
    {
        var indexViewModel = viewBagWrapper.CreateIndexViewModel(controller, Model);

        <p style="margin-top: 1em;">
            <a asp-action="Create" class="btn btn-outline-secondary">@translateFor("Create New")</a>
        </p>

        <table class="table">
            <thead>
                <tr>
                    @foreach (var item in indexViewModel.DisplayProperties)
                    {
                        <th>
                            @translateFor(indexViewModel.GetLabel(item))
                        </th>
                    }
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var model in indexViewModel.Models)
                {
                    model.ViewBagInfo = viewBagWrapper;
                    <tr>
                        @foreach (var displayItem in indexViewModel.DisplayProperties)
                        {
                            <td>
                                @indexViewModel.GetDisplayValue(model, displayItem)
                            </td>
                        }
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = model.Id }) |
                            @Html.ActionLink("Delete", "Delete", new { id = model.Id })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}
