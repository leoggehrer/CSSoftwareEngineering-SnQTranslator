@*@CodeCopy*@
@{
    @using SnQTranslator.AspMvc.Models.Modules.Common;
    @using SnQTranslator.AspMvc.Models.Modules.View
    @using SnQTranslator.AspMvc.Modules.Handler
    @using SnQTranslator.AspMvc.Modules.Language
    @using SnQTranslator.AspMvc.Modules.Session
    @using SnQTranslator.AspMvc.Modules.View
    @model IEnumerable<SnQTranslator.AspMvc.Models.IdentityModel>

    var viewBagWrapper = new ViewBagWrapper(ViewBag);
    var sessionWrapper = new SessionWrapper(Context.Session);

    viewBagWrapper.Translate = Translator.TranslateIt;
    viewBagWrapper.Controller = ViewContext.RouteData.Values["controller"].ToString();
    viewBagWrapper.Action = ViewContext.RouteData.Values["action"].ToString();

    var indexViewModel = default(IndexViewModel);

    if (Model is IEnumerable<IMasterDetails> mds)
    {
        var models = mds.Select(m => m.Master);

        if (models.Any())
        {
            indexViewModel = viewBagWrapper.CreateIndexViewModel(models);
        }
        viewBagWrapper.ModelType = ModelType.MasterDetail;
        viewBagWrapper.CommandMode |= SnQTranslator.AspMvc.Models.Modules.Common.CommandMode.CreateDetail;
    }
    else
    {
        viewBagWrapper.ModelType = ModelType.Single;
        indexViewModel = viewBagWrapper.CreateIndexViewModel(Model);
    }

    if (indexViewModel != null)
    {
        <table class="table">
            <thead>
                <tr>
                    @foreach (var item in indexViewModel.GetDisplayProperties())
                    {
                        <th>
                            @viewBagWrapper.TranslateFor(indexViewModel.GetLabel(item))
                        </th>
                    }
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var model in indexViewModel.Models)
                {
                    model.ViewBagInfo = viewBagWrapper;
                    <tr>
                        @foreach (var displayItem in indexViewModel.GetDisplayProperties())
                        {
                            <td>
                                @indexViewModel.GetDisplayValue(model, displayItem)
                            </td>
                        }
                        <td>
                            @await Html.PartialAsync("_CommandControl", model)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}
