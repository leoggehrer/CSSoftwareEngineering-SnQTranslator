@using SnQTranslator.AspMvc.Modules.Handler
@using SnQTranslator.AspMvc.Modules.Session
@model IEnumerable<SnQTranslator.AspMvc.Models.Persistence.App.Translation>

@{
    var all = string.Empty;
    var page = string.Empty;
    var activeHref = "/Translations/IndexByPage";
    var title = "Translations";
    var sessionWrapper = new SessionWrapper(Context.Session);

    ViewData["Title"] = title;
    if (sessionWrapper.HasValue(nameof(page)))
    {
        page = sessionWrapper.GetStringValue(nameof(page), all);
    }
}

<h1>Index</h1>

@if (string.IsNullOrEmpty(sessionWrapper.SessionToken) == false)
{
    <p>
        <a asp-action="Create">Create a new translation...</a>
    </p>
}

@if (string.IsNullOrEmpty(ErrorHandler.LastError) == false)
{
    <div class="alert alert-danger" role="alert">
        @ErrorHandler.GetLastErrorAndClear()
    </div>
}

@{
    var appName = sessionWrapper.GetStringValue("appname");
    var appNames = Model.GroupBy(m => m.AppName).Select(e => e.Key).OrderBy(e => e);

    if (appNames.Any(e => e != null && e.Equals(appName)) == false)
    {
        appName = null;
    }
    var selectItems = new SelectList(appNames).ToList();

    selectItems.ForEach(e =>
    {
        if (string.IsNullOrEmpty(e.Text))
        {
            e.Text = "*";
        }
        if (appName != null && e != null && e.Text.Equals(appName))
        {
            e.Selected = true;
        }
    });
    char chrStart = 'A', chrEnd = 'Z';
    <div class="d-flex justify-content-center">
        <div class="p-0" style="margin-right: 10px; min-width: 100px;">
            @Html.DropDownList("AppNames",
                                selectItems,
                                null,
                                new
                                     {
                                    @class = "form-control",
                                    @onchange = "callByAppName(this.value)"
                                })
        </div>
        @for (char chrRun = chrStart; chrRun <= chrEnd; chrRun++)
        {
            var strRun = Char.ToString(chrRun);

            if (chrRun.ToString().Equals(page, StringComparison.CurrentCultureIgnoreCase))
            {
                <div class="p-sm-0"><a class="page-link" style="background-color: lightgray;" href="@($"{activeHref}?page={strRun}")">@strRun</a></div>
            }
            else
            {
                <div class="p-sm-0"><a class="page-link" href="@($"{activeHref}?page={strRun}")">@strRun</a></div>
            }
        }
        @if (string.IsNullOrEmpty(page) || page.Equals(all, StringComparison.CurrentCultureIgnoreCase))
        {
            <div class="p-0" style="margin-left: 10px;"><a class="page-link" style="background-color: lightgray;" href="@($"{activeHref}?page={all}")">All</a></div>
        }
        else
        {
            <div class="p-0" style="margin-left: 10px;"><a class="page-link" href="@($"{activeHref}")">All</a></div>
        }
    </div>
}
<p></p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.AppName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.KeyLanguage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Key)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ValueLanguage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Value)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Where(e => appName == null || (e.AppName != null && e.AppName.Equals(appName))))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.AppName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.KeyLanguage)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Key)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ValueLanguage)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Value)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @*@Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |*@
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    function callByAppName(val) {
        window.location.href = "/Translations/IndexByAppName?appName=" + val;
    }
</script>
